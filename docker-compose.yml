version: '3.8'

services:
  # TemJob 主服务
  temjob:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: temjob-server
    ports:
      - "8088:8088"
    environment:
      - CONFIG_PATH=/app/config.yaml
    depends_on:
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy
    volumes:
      - ./config.yaml:/app/config.yaml
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - temjob-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/api/v1/stats"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis 缓存和队列
  redis:
    image: redis:7-alpine
    container_name: temjob-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - temjob-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis123}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: temjob-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-Root@123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-temjob}
      MYSQL_USER: ${MYSQL_USER:-temjob}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-temjob123}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    networks:
      - temjob-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-Root@123}"]
      interval: 10s
      timeout: 5s
      retries: 3

  # TemJob Worker (可选的额外工作器)
  temjob-worker:
    build: 
      context: .
      dockerfile: Dockerfile.worker
    container_name: temjob-worker
    environment:
      - CONFIG_PATH=/app/config.yaml
      - WORKER_ID=worker-001
    depends_on:
      temjob:
        condition: service_healthy
    volumes:
      - ./config.yaml:/app/config.yaml
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - temjob-network
    deploy:
      replicas: 2  # 运行2个工作器实例

  # Nginx 反向代理 (生产环境推荐)
  nginx:
    image: nginx:alpine
    container_name: temjob-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - temjob
    restart: unless-stopped
    networks:
      - temjob-network

  # Redis 监控 (可选)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: temjob-redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379:0:${REDIS_PASSWORD:-redis123}
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin123
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - temjob-network

  # MySQL 管理 (可选)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: temjob-phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD:-Root@123}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-Root@123}
    depends_on:
      - mysql
    restart: unless-stopped
    networks:
      - temjob-network

  # Prometheus 监控 (可选)
  prometheus:
    image: prom/prometheus:latest
    container_name: temjob-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - temjob-network

  # Grafana 仪表板 (可选)
  grafana:
    image: grafana/grafana:latest
    container_name: temjob-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - temjob-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  temjob-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16